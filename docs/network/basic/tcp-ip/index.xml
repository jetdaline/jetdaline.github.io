<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>TCP/IP on IWiki</title>
    <link>https://jetdaline.github.io/docs/network/basic/tcp-ip/</link>
    <description>Recent content in TCP/IP on IWiki</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language><atom:link href="https://jetdaline.github.io/docs/network/basic/tcp-ip/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>TCP</title>
      <link>https://jetdaline.github.io/docs/network/basic/tcp-ip/tcp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jetdaline.github.io/docs/network/basic/tcp-ip/tcp/</guid>
      <description>TCP 协议#TCP 协议#Transmission Control Protocol，传输控制协议 是面向连接的协议，在收发数据前，必须和对方建立可靠的连接。 一个TCP连接必须有三次握手、四次挥手 报文首部#seq：报文序号 ask：确认序号 标志位 描述 说明 URG 紧急 当URG=1时，表明报文段有紧急数据，应当尽快传送。 ACK 确认 当ACK=1时，上面的确认号才管用。 PSH 推送 当PSH=1时，接收端应当将缓冲区中的数据尽快交付上层。 RST 重连 当RST=1时，表示TCP连接出现严重差错，必须释放连接，再重新建立连接。 SYN 新建 当SYN=1时，表示请求建立连接。 FIN 终止 当FIN=1时，表示要求释放连接。 建立连接：三次握手#三次握手（Three-way Handshake），是指建立一个 TCP 连接时，需要客户端和服务器总共发送3个包 第一次握手：客户端发出报文（SYN），请求建立连接 第二次握手：服务器收到报文（ SYN ），如果同意连接，则发出确认报文（SYN+ASK） 第三次握手：客户端收到确认报文（SYN+ASK）后，再发出确认报文（ASK） 握手过程简述
第一次握手 A请求建立连接 A：你听清楚么？ 第二次握手 A发送正常，B接收正常 B：能听清楚，你呢？ 第三次握手 B发送正常，A接收正常 A：也能听清楚。 断开连接：四次挥手#四次挥手（Four-way handshake），即TCP 的连接的拆除需要发送四个包 第一次挥手：客户端发出报文（FIN），请求释放连接，停止发送数据 第二次挥手：服务器收到报文（FIN），发出确认报文（ASK），停止接收数据 第三次挥手：服务器发出报文（FIN），停止发送数据 第四次挥手：客户端收到报文（FIN），发出确认报文（ASK），停止接收数据 挥手过程简述 第一次挥手 A请求断开连接 A：我要挂电话了？ 第二次挥手 B收到请求，同意断开连接 B：收到，挂吧。 第三次挥手 B确认断开连接 B：我也没有话要说了。 第四次挥手 A收到确认，断开连接 A：挂断电话。 UDP 协议#User Data Protocol，用户数据报协议 是一个非连接的协议，传输数据之前源端和终端不建立连接 当它想传送时就简单地去抓取来自应用程序的数据，并尽可能快地把它扔到网络上 报文首部#TCP vs UDP#TCP UDP 连接性 面向字节流，需要建立连接 面向报文，不需建立连接 可靠性 可靠，不丢包 不可靠，会丢包 传输效率 传输效率低，速度慢 传输效率高，速度快 流量控制 滑动窗口 无 拥塞控制 慢开始、拥塞避免、快重传、快恢复 无 应用场合 对效率要求低，对准确性要求高或要求有连接的场景 对效率要求高，对准确性要求低 连接方式 只支持点到点 支持一对一、一对多、多对多 首部开销 开销20字节 开销8字节 </description>
    </item>
    
    <item>
      <title>IP</title>
      <link>https://jetdaline.github.io/docs/network/basic/tcp-ip/ip/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jetdaline.github.io/docs/network/basic/tcp-ip/ip/</guid>
      <description>IP 协议#IP 协议#Internet Protocol，网际互连协议 IP 地址#是指互联网协议地址，规定网络上所有的设备都必须有独一无二的标识 IPV4：使用 32 个比特或者 4 组 0 到 255 之间的数字来为计算机编址，如192.168.1.60，分为ABCDE五类 起始地址 终止地址 A类 0.0.0.0 127.255.255.255 B类 128.0.0.0 191.255.255.255 C类 192.0.0.0 223.255.255.255 D类 224.0.0.0 239.255.255.255 E类 240.0.0.0 255.255.255.255 子网掩码#IP 地址由网络号和主机号两部分组成 子网掩码是一个32位地址，结合IP地址进行计算，可以得到IP地址的网络号、主机号 A:	202.194.128.9 B:	202.194.128.14 子网掩码: 255.255.255.0 转二进制： A:	1100 1010.1100 0010.1000 0000.0000 1001 B:	1100 1010.1100 0010.1000 0000.0000 1101 子网掩码: 1111 1111.1111 1111.1111 1111.0000 0000 掩码取反: 0000 0000.</description>
    </item>
    
  </channel>
</rss>
